{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Contacts.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Contacts.js","App.js","index.js"],"names":["module","exports","ContactForm","state","id","uuid","name","number","handleChange","evt","setState","target","value","onSubmit","preventDefault","props","handleSubmit","className","styles","form","this","title","onChange","type","pattern","required","btn","Component","Filter","filter","block","htmlFor","input","ContactsListItem","item","handleDelete","textContent","onClick","ContactsList","items","ul","map","Contacts","prevState","term","some","alert","newTodo","localStorage","getItem","parsedItems","JSON","parse","setItem","stringify","formattedFilter","toLowerCase","trim","filteredItems","includes","titleContact","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8dba22d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__18aiZ\",\"title\":\"ContactForm_title__3_-Rd\",\"btn\":\"ContactForm_btn__2IqjU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Filter_block__3rhuD\",\"title\":\"Filter_title__BbpiY\",\"input\":\"Filter_input__2L_qJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Contacts_title__2udsA\",\"titleContact\":\"Contacts_titleContact__3NhQf\",\"block\":\"Contacts_block__1uq1E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactListItem_btn__1zOU3\",\"textContent\":\"ContactListItem_textContent__3epmj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__2as4E\"};","import React, { Component } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    id: uuid(),\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (evt) => {\r\n    this.setState({ [evt.target.name]: evt.target.value });\r\n  };\r\n\r\n  onSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    this.props.handleSubmit(this.state);\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className={styles.form} onSubmit={this.onSubmit}>\r\n          <span className={styles.title}>Name</span>\r\n          <input\r\n            onChange={this.handleChange}\r\n            value={this.state.name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n          <span className={styles.title}>Number</span>\r\n          <input\r\n            name=\"number\"\r\n            type=\"tel\"\r\n            onChange={this.handleChange}\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n          <button className={styles.btn} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ handleChange, filter }) => {\r\n  return (\r\n    <div className={styles.block}>\r\n      <label className={styles.title} htmlFor=\"filter\">Find contacts by name:</label>\r\n      <input\r\n        id=\"filter\"\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        className={styles.input}\r\n        onChange={handleChange}\r\n        value={filter}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  handleChange: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./ContactListItem.module.css\";\r\nconst ContactsListItem = ({ item, handleDelete}) => {\r\n  const { name, number } = item;\r\n\r\n  return (\r\n    <li>\r\n      <div className={styles.textContent}>\r\n        <span>\r\n          {name}: {number}\r\n        </span>\r\n        <button className={styles.btn} onClick={handleDelete}>X</button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactsListItem.propTypes = {\r\n  item: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  handleDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsListItem;\r\n","import PropTypes from \"prop-types\";\r\nimport ContactsListItem from \"../ContactListItem/ContactListItem\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactsList = ({ items, handleDelete }) => {\r\n  return (\r\n    <>\r\n      <ul className={styles.ul}>\r\n        {items.map((item) => (\r\n          <ContactsListItem\r\n            key={item.id}\r\n            item={item}\r\n            handleDelete={() => handleDelete(item.id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape({ id: PropTypes.string.isRequired }))\r\n    .isRequired,\r\n  handleDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import { Component } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport ContactsList from \"./ContactList/ContactList\";\r\nimport styles from \"./Contacts.module.css\";\r\n\r\n\r\nclass Contacts extends Component {\r\n  state = {\r\n    items: [],\r\n    filter: \"\",\r\n  };\r\n\r\n  // ==========================сохранение в localStorage=============================\r\n\r\n  componentDidMount() {\r\n    const items = localStorage.getItem(\"items\");\r\n    if (items) {\r\n      const parsedItems = JSON.parse(items);\r\n      this.setState({ items: parsedItems });\r\n    }\r\n  }\r\n\r\n  // ==========================удаление из localStorage==============================\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (prevState.items !== this.state.items) {\r\n      localStorage.setItem(\"items\", JSON.stringify(this.state.items));\r\n    }\r\n  }\r\n\r\n  handleDelete = (id) => {\r\n    this.setState((prevState) => ({\r\n      items: prevState.items.filter((item) => item.id !== id),\r\n    }));\r\n  };\r\n\r\n  handleChange = (evt) => {\r\n    this.setState({ [evt.target.name]: evt.target.value });\r\n  };\r\n\r\n  handleSubmit = (term) => {\r\n    if (!term) {\r\n      alert(\"Поле не может быть пустым!\");\r\n      return;\r\n    }\r\n\r\n    const isDuplicate = this.state.items.some(\r\n      (item) => item.name === term.name\r\n    );\r\n    if (isDuplicate) {\r\n      alert(\"Контакт: \" + term.name + \" уже существует \");\r\n      return;\r\n    }\r\n\r\n    const newTodo = {\r\n      id: uuid(),\r\n      name: term.name,\r\n      number: term.number,\r\n    };\r\n\r\n    this.setState((prevState) => {\r\n      const newItems = [newTodo, ...prevState.items];\r\n      return { items: newItems };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { items, filter } = this.state;\r\n    const formattedFilter = filter.toLowerCase().trim();\r\n    const filteredItems = items.filter((item) =>\r\n      item.name.toLowerCase().includes(formattedFilter)\r\n    );\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className={styles.title}>Phonebook</h1>\r\n        <ContactForm handleSubmit={this.handleSubmit} />\r\n        <h2 className={styles.titleContact}>Contacts</h2>\r\n        <div className={styles.block}>\r\n          <Filter filter={filter} handleChange={this.handleChange} />\r\n          <ContactsList\r\n            items={filteredItems}\r\n            handleDelete={this.handleDelete}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\nimport Contacts from \"./components/Contacts\";\n\n\nconst App = () => {\n  return (\n    <div className=\"block\">\n      <Contacts />\n    </div>\n  );\n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}